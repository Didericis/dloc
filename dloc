#!/usr/local/bin/bash

dlocDirName="dloc"                                          #Name of folder for all dloc packages, and for folder containing local package references
dlocDir="/Users/eric/Games/Minecraft/Profiles/\
1.7.10.DidiTech/saves/Makosh/opencomputers/\
854e236c-4266-4363-9322-5a5cb7457521/$dlocDirName"          #Locaction of folder for all dloc packages
dlocJsonName="dloc.json"                                    #Name of file containing info for dloc packages
curDir=$(pwd)                                               #Location where script was invoked
arg=$1;                                                     #Command issued
newDeps=()                                                  #Array of new dependencies (to check for sub dependencies)

function getRepo {
    echo "git@bitbucket.org:didericis/$1.git";
}

function getPackageName {
    local packageNameRaw=$1

    echo $(echo $packageNameRaw | sed "s/dloc-//g");
}

function mkLocalRef {
    local package=$1;
    local version=$2;

    cd $curDir;
    if [ ! -d $dlocDirName ]; then
        mkdir dloc;
    fi;
    echo "return require('dloc.$package.$version.main')" > "dloc/$package.lua";
    cd $dlocDir;
}

function mkVersionLua {
    if [ "$1" == "*" ]; then
        echo "*";
    else
        local versionLua=$(echo $1 | sed "s/v//g");
        echo $(echo $versionLua | sed "s/\./-/g");
    fi;
}

function isNewDep {
    for i in "${!newDeps[@]}"; do
        if [ "${newDeps[$i]}" == "$dep" ]; then
            echo false;
        fi
    done
    echo true;
}

function installDep {
    local dep=$1;
    local version=$2;

    local packageName=$(getPackageName $dep);
    local packageFolder="$dlocDir/$packageName";
    local repoName=$(getRepo $dep);
    local versionLua=$(mkVersionLua "$version");

    cd $dlocDir;
    if [ ! -d $packageName ]; then
        mkdir $packageName;
    fi;
    
    cd $packageFolder;
    if [[ ("$version" != '*') && (! -d $versionLua) ]]; then
        echo "Installing $dep $version from $repoName...";
        git clone --branch "v$version" "$repoName" "$versionLua" &> /dev/null; 
    elif [ ! "$(ls)" ]; then
        echo "Installing $dep from $repoName...";
        git clone $repoName tmp &> /dev/null; 
        cd tmp;
        branch=$(git describe --tags `git rev-list --tags --max-count=1`);
        versionLua=$(mkVersionLua $branch);
        cd ..;
        mv tmp $versionLua;
    else
        echo "Package $dep already installed."
        versionLua=$(mkVersionLua $version);
    fi;

    newDeps+=($dep);
    installAllDeps "$dlocDir/$packageName/$versionLua";
    mkLocalRef "$packageName" "$versionLua";
}

#Installs all dependencies in the dloc.json file found in the directory passed
function installAllDeps {
    local packageDir=$1;

    cd $packageDir;
    if [ -f $dlocJsonName ]; then
        local depsRaw=($(jq '.dependencies' $dlocJsonName | jq 'keys' | sed "s|[,\"\{\}\[\]||g"));
        for i in "${!depsRaw[@]}"; do
            local dep="${depsRaw[$i]}";
            if [[ ($dep != "[") && ($dep != "]") && $(isNewDep $dep) ]]; then
                local versionRaw=$(jq ".dependencies[\"$dep\"]" $dlocJsonName); 
                local version=$(echo $versionRaw | sed "s/[,\"\"]//g");
                installDep "$dep" "$version";
                cd $packageDir;
            elif [[ ($dep != "[") && ($dep != "]") ]]; then
                echo "Dep already installed.";
            fi;
        done;
    else
        echo "No $dlocJsonName found.";
    fi;
}

function install {
    installAllDeps $curDir;
}

if [ "$arg" == "install" ]; then
    install;
fi;
